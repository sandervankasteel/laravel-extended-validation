name: Automated tests
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { "php": "7.3", "laravel": "7.*", "testbench": "5.*", "dependency-version": "prefer-stable"}
          - { "php": "7.3", "laravel": "8.*", "testbench": "6.*", "dependency-version": "prefer-stable"}
          - { "php": "7.4", "laravel": "7.*", "testbench": "5.*", "dependency-version": "prefer-stable"}
          - { "php": "7.4", "laravel": "8.*", "testbench": "6.*", "dependency-version": "prefer-stable"}
          - { "php": "8.0", "laravel": "7.*", "testbench": "5.*", "dependency-version": "prefer-stable"}
          - { "php": "8.0", "laravel": "8.*", "testbench": "6.*", "dependency-version": "prefer-stable"}
          - { "php": "8.0", "laravel": "9.*", "testbench": "7.*", "dependency-version": "prefer-stable"}
          - { "php": "8.1", "laravel": "8.*", "testbench": "6.*", "dependency-version": "prefer-stable"}
          - { "php": "8.1", "laravel": "9.*", "testbench": "7.*", "dependency-version": "prefer-stable"}

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, intl, gd, iconv, xdebug
          coverage: xdebug

      - name: Install dependencies
        run: |
          composer require "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Execute tests
        run: XDEBUG_MODE=coverage ./vendor/bin/pest --coverage

      - name: Download codecov.io uploader
        run: curl -Os https://uploader.codecov.io/latest/linux/codecov && chmod +x codecov

      - name: Upload coverage report to CodeCov
        run: ./codecov -t ${CODECOV_TOKEN}
